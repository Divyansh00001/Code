class Solution {
private:
   void solve(string digits,string output,int index,vector<string>& ans,vector<string>&mapping) {
     //base case
     if(index>=digits.length()){
       ans.push_back(output);
       return;
     }
     int digit = digits[index]-'0';
     string value = mapping[digit];

     for(int i =0;i<value.length();i++){
         char ch = value[i];
         output.push_back(value[i]);
         solve(digits,output,index+1,ans,mapping);
         //backtrack
         output.pop_back();
     }
       
   }




public:
    vector<string> letterCombinations(string digits) {
         vector<string>ans;
         if(digits.length()==0){
           return ans;
         }
         string output = "";
         int index = 0;
         vector<string>mapping(10);
         mapping[2]="abc";
         mapping[3]="def";
         mapping[4]="ghi";
         mapping[5]="jkl";
         mapping[6]="mno";
         mapping[7]="pqrs";
         mapping[8]="tuv";
         mapping[9]="wxyz";
         solve(digits,output,index,ans,mapping);
         return ans;
        
    }
};
